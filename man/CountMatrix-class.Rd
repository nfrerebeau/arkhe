% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R, R/initialize.R
\docType{class}
\name{CountMatrix-class}
\alias{CountMatrix-class}
\alias{.CountMatrix}
\alias{CountMatrix}
\title{Count matrix}
\usage{
CountMatrix(data = 0, nrow = 1, ncol = 1, byrow = FALSE,
  dimnames = NULL, ...)
}
\arguments{
\item{data}{an optional data vector (including a list or
    \code{\link{expression}} vector).  Non-atomic classed \R objects are
    coerced by \code{\link{as.vector}} and all attributes discarded.}

\item{nrow}{the desired number of rows.}

\item{ncol}{the desired number of columns.}

\item{byrow}{logical. If \code{FALSE} (the default) the matrix is
    filled by columns, otherwise the matrix is filled by rows.}

\item{dimnames}{A \code{\link{dimnames}} attribute for the matrix:
    \code{NULL} or a \code{list} of length 2 giving the row and column
    names respectively.  An empty list is treated as \code{NULL}, and a
    list of length one as row names.  The list can be named, and the
    list names will be used as names for the dimensions.}

\item{...}{additional arguments to be passed to or from methods.}
}
\value{
TODO
}
\description{
An S4 class to represent a count matrix.
}
\note{
Numeric values are \code{\link[base:round]{rounded}} to zero decimal places
 and then coerced to \code{\link{integer}} as by
 \code{\link[base]{as.integer}}.
}
\section{Matrix ID}{

 When a matrix is first created, an identifier is generated (UUID v4).
 This ID is preserved when coercing to another class. Thus, the object ID is
 unique within the same class, but two objects of different classes can have
 the same ID. This makes it possible to identify objects representing the
 same initial data and associate them with the results of specific
 computations (e. g. \link[=seriate]{seriation}).
}

\section{Get and set}{

 In the code snippets below, \code{x} is a \code{*Matrix} object.
 \describe{
  \item{\code{get_id(x)}}{Get the ID of \code{x}.}
 }
}

\section{Access}{

 In the code snippets below, \code{x} is a \code{*Matrix} object.
 \describe{
  \item{\code{dim(x)}}{Returns the dimension of \code{x}.}
  \item{\code{nrow(x)}}{Returns the number of rows present in \code{x}.}
  \item{\code{ncol(x)}}{Returns the number of columns present in \code{x}.}
  \item{\code{dimnames(x)}, \code{dimnames(x) <- value}}{Retrieves or sets
  the row dimnames of \code{x} according to \code{value}.}
  \item{\code{rownames(x)}, \code{rownames(x) <- value}}{Retrieves or sets
  the row names of \code{x} according to \code{value}.}
  \item{\code{colnames(x)}, \code{colnames(x) <- value}}{Retrieves or sets
  the column names of \code{x} according to \code{value}.}
 }
}

\section{Subset}{

 In the code snippets below, \code{x} is a \code{*Matrix} object.
 \describe{
  \item{\code{x[i, j]}}{Extracts elements selected by subscripts \code{i}
  and \code{j}. Indices are \code{\link{numeric}}, \code{\link{integer}} or
  \code{\link{character}} vectors or empty (missing) or \code{NULL}.
  Numeric values are coerced to \code{\link{integer}} as by
  \code{\link{as.integer}} (and hence truncated towards zero).
  Character vectors will be matched to the name of the elements.
  An empty index (a comma separated blank) indicates that all
  entries in that dimension are selected.
  Returns an object of the same class as \code{x}.}
  \item{\code{x[[i]]}}{Extracts informations from a slot selected by
  subscript \code{i}. \code{i} should be one of "\code{id}" or \code{NULL}.}
 }
}

\examples{
## Create a count data matrix
A1 <- CountMatrix(data = sample(0:10, 100, TRUE),
                  nrow = 10, ncol = 10, byrow = TRUE)

## Access
get_id(A1)
dim(A1) # Get the matrix dimensions
colnames(A1) # Get the column names
colnames(A1) <- letters[11:20] # Set the column names
rownames(A1) # Get the rownames
rownames(A1) <- LETTERS[1:10] # Set the row names

## Subset
A1[["id"]] # Get the matrix ID
A1[, ] # Get all values
A1[1, ] # Get the first row
A1[c("A", "B", "C"), ] # Get the first three rows
A1[c("A", "B", "C"), 1] # Get the first three rows of the first column
A1[, 1, drop = FALSE] # Get the first column

## Coerce counts to frequencies
B <- as_frequency(A1)
## Row sums are internally stored before coercing to a frequency matrix
get_totals(B) # Get row sums
## This allows to restore the source data
A2 <- as_count(B)
all(A1 == A2)
}
\seealso{
\linkS4class{NumericMatrix}, \linkS4class{SpaceTime}

Other abundance matrix: \code{\link{FrequencyMatrix-class}},
  \code{\link{OccurrenceMatrix-class}}

Other matrix: \code{\link{FrequencyMatrix-class}},
  \code{\link{IncidenceMatrix-class}},
  \code{\link{LogicalMatrix-class}},
  \code{\link{Matrix-class}},
  \code{\link{NumericMatrix-class}},
  \code{\link{OccurrenceMatrix-class}},
  \code{\link{SimilarityMatrix-class}},
  \code{\link{coerce}}
}
\author{
N. Frerebeau
}
\concept{abundance matrix}
\concept{matrix}
